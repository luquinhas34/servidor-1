generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String
  role     String

  // Relacionamentos
  avaliacao         Avaliacao[]
  diarios           Diario[]
  tarefas           Atividade[]
  avisos            Aviso[]
  chamadas          Chamadas[]
  turmas            TurmaUsuario[]
  mensagens         Mensagem[]         @relation("MensagensAutor")
  chatsParticipando ChatParticipante[]
  responsavelDe     ResponsavelAluno[] @relation("ResponsavelRelacao")
  responsaveis      ResponsavelAluno[] @relation("AlunoRelacao")
  aluno             Aluno?
  professor         Professor?
  presencas         Presenca[]         @relation("PresencaAluno")
}

model Professor {
  id             Int      @id @default(autoincrement())
  name           String
  cpf            String
  telefone       String
  dataNascimento DateTime
  email          String
  matricula      String
  password       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userId         Int      @unique
  user           User     @relation(fields: [userId], references: [id])
}

model Aluno {
  id             Int      @id @default(autoincrement())
  nome           String
  cpf            String
  telefone       String
  dataNascimento DateTime
  email          String
  cpfMae         String
  cpfPai         String
  senha          String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userId         Int      @unique
  user           User     @relation(fields: [userId], references: [id])
}

model Turma {
  idt         Int         @id @default(autoincrement())
  nome        String
  descricao   String?

  usuarios    TurmaUsuario[]
  chamadas    Chamadas[]
  presencas   Presenca[]
  Diario      Diario[]
  atividades  Atividade[]
  avaliacoes  Avaliacao[]
  horarios    Horario[]
  calendario  Calendario? @relation("CalendarioDaTurma")
}


model TurmaUsuario {
  id       Int @id @default(autoincrement())
  userId   Int // ID do aluno
  turmaIdt Int // IDT da turma

  turma Turma @relation(fields: [turmaIdt], references: [idt])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([userId, turmaIdt])
}

model Chamadas {
  id       Int      @id @default(autoincrement())
  data     DateTime @default(now())
  nome     String
  materia  String
  turmaIdt Int
  userId   Int

  turma     Turma      @relation(fields: [turmaIdt], references: [idt])
  user      User       @relation(fields: [userId], references: [id])
  presencas Presenca[]

  @@map("chamadas")
}

model Presenca {
  id        Int    @id @default(autoincrement())
  alunoId   Int
  chamadaId Int
  turmaIdt  Int
  status    Status

  turma   Turma    @relation(fields: [turmaIdt], references: [idt])
  chamada Chamadas @relation(fields: [chamadaId], references: [id])
  Diario  Diario[]
  aluno   User     @relation("PresencaAluno", fields: [alunoId], references: [id])

  @@map("presencas")
}

model Diario {
  id       Int      @id @default(autoincrement())
  alunoId  Int
  turmaIdt Int
  data     DateTime @default(now())
  status   Status
  userId   Int

  user      User       @relation(fields: [userId], references: [id])
  turma     Turma      @relation(fields: [turmaIdt], references: [idt])
  presencas Presenca[]

  @@map("diarios")
}

enum Status {
  PRESENCA
  FALTA
}

model Atividade {
  id         Int      @id @default(autoincrement())
  titulo     String
  descricao  String
  turmaIdt   Int
  dataInicio DateTime
  dataFim    DateTime
  documento  String?
  userId     Int
  data       DateTime @default(now())

  turma Turma @relation(fields: [turmaIdt], references: [idt])
  user  User  @relation(fields: [userId], references: [id])
}

model Aviso {
  id        Int      @id @default(autoincrement())
  titulo    String   @db.VarChar(100)
  descricao String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int

  user User @relation(fields: [userId], references: [id])

  @@map("avisos")
}

model Avaliacao {
  id         Int      @id @default(autoincrement())
  titulo     String
  descricao  String
  turmaIdt   Int
  dataInicio DateTime
  dataFim    DateTime
  documento  String?
  userId     Int
  data       DateTime @default(now())

  turma Turma @relation(fields: [turmaIdt], references: [idt])
  user  User  @relation(fields: [userId], references: [id])

  @@map("avaliacoes")
}

model Chat {
  id            Int                @id @default(autoincrement())
  titulo        String?
  participantes ChatParticipante[]
  mensagens     Mensagem[]
  updatedAt     DateTime           @updatedAt
}

model ChatParticipante {
  id     Int @id @default(autoincrement())
  userId Int
  chatId Int

  user User @relation(fields: [userId], references: [id])
  chat Chat @relation(fields: [chatId], references: [id])
}

model Mensagem {
  id          Int      @id @default(autoincrement())
  texto       String
  chatId      Int
  remetenteId Int
  data        DateTime @default(now())
  createdAt   DateTime @default(now())

  remetente User @relation("MensagensAutor", fields: [remetenteId], references: [id])
  chat      Chat @relation(fields: [chatId], references: [id])
}

model ResponsavelAluno {
  id            Int @id @default(autoincrement())
  responsavelId Int
  alunoId       Int

  responsavel User @relation("ResponsavelRelacao", fields: [responsavelId], references: [id])
  aluno       User @relation("AlunoRelacao", fields: [alunoId], references: [id])

  @@unique([responsavelId, alunoId])
}

model Horario {
  id         Int     @id @default(autoincrement())
  dia        String
  turno      String
  atividade  String
  horaInicio String
  horaFim    String
  turmaId    Int
  turma      Turma   @relation(fields: [turmaId], references: [idt])
}




model Calendario {
  id         Int                @id @default(autoincrement())
  nome       String
  ano        Int
  semestre   Int
  eventos    EventoCalendario[]
  turma      Turma              @relation("CalendarioDaTurma", fields: [turmaIdt], references: [idt])
  turmaIdt   Int                @unique
}


model EventoCalendario {
  id           Int        @id @default(autoincrement())
  data         DateTime
  tipo         EventoTipo
  calendarioId Int
  calendario   Calendario @relation(fields: [calendarioId], references: [id])
}

enum EventoTipo {
  INICIO_BIMESTRE
  RECESSO
  SABADO_LETIVO
  FERIADO
}
